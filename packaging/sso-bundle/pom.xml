<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.exoplatform.platform</groupId>
		<artifactId>exo.platform.packaging</artifactId>
		<version>3.5.4-SNAPSHOT</version>
	</parent>
	<artifactId>exo.platform.packaging.sso-bundle</artifactId>
	<packaging>pom</packaging>
	<name>eXo Platform - Packaging SSO</name>

    <properties>
        <tomcat.webapps.dir>${project.build.directory}/sso-bundle/tomcat-bundle/webapps</tomcat.webapps.dir>
        <tomcat.lib.dir>${project.build.directory}/sso-bundle/tomcat-bundle/lib</tomcat.lib.dir>
        <tomcat.conf.dir>${project.build.directory}/sso-bundle/tomcat-bundle/conf/Catalina/localhost</tomcat.conf.dir>
    </properties>
	<profiles>
		<profile>
			<id>distrib</id>
			<dependencies>
				<dependency>
					<groupId>org.exoplatform.platform</groupId>
					<artifactId>exo.platform.packaging.tomcat</artifactId>
					<version>${project.version}</version>
					<type>zip</type>
					<scope>provided</scope>
				</dependency>

			</dependencies>

			<build>
				<finalName>eXo-Platform-SSO-${project.version}</finalName>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<!--
 | Step 01: download and unpack the base Tomcat package
-->
								<id>01-copy-as-tomcat</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<overWriteSnapshots>true</overWriteSnapshots>
									<artifactItems>
										<artifactItem>
											<groupId>org.exoplatform.platform</groupId>
											<artifactId>exo.platform.packaging.tomcat</artifactId>
											<type>zip</type>
											<version>${project.version}</version>
											<outputDirectory>${project.build.directory}/sso-bundle</outputDirectory>
											<excludes>conf/</excludes>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>

							<!--
 | Step 02: copy Filter and component service artifacts
-->		   <execution>
								<id>01-copy-FilterandComponent-service</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.exoplatform.platform</groupId>
											<artifactId>exo.platform.sample.sso-extension.component.sso-extensible-filter</artifactId>
											<version>${project.version}</version>
											<outputDirectory>${project.build.directory}/sso-bundle/tomcat-bundle/lib</outputDirectory>
										</artifactItem>
                                        <artifactItem>
                                            <groupId>org.exoplatform.platform</groupId>
                                            <artifactId>exo.platform.sample.sso-extension.config</artifactId>
                                            <version>${project.version}</version>
                                            <outputDirectory>${project.build.directory}/sso-bundle/tomcat-bundle/lib</outputDirectory>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.exoplatform.platform</groupId>
                                            <artifactId>exo.platform.sample.sso-extension.webapp</artifactId>
                                            <version>${project.version}</version>
                                            <type>war</type>
                                            <outputDirectory>${project.build.directory}/sso-bundle/tomcat-bundle/webapps</outputDirectory>
                                            <destFileName>sso-extension.war</destFileName>
                                        </artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
                    <!--
 | Step 03: Package a new zip
-->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>

                                <!--
                                 |
                                -->
                                <id>02-prepare-sso-bundle</id>
                                <phase>prepare-package</phase>
                                <configuration>
                                    <target>
                                        <!-- create the conf directory in which we put configuration.properties of openAM,JOSSO,cas and SPENAGO-->
                                        <mkdir dir="${project.build.directory}/sso-bundle/conf" />
                                        <!-- copy all SSO server configuration to the conf directory-->
                                        <copy todir="${project.build.directory}/sso-bundle/conf">
                                            <fileset dir="${project.basedir}/src/main/resources/gatein/conf/"/>
                                        </copy>
                                        <!-- Use the conf of CAS as default configuration -->
                                        <copy file="${project.basedir}/src/main/resources/gatein/conf/configuration_cas.properties" tofile="${project.build.directory}/sso-bundle/tomcat-bundle/gatein/conf/configuration.properties" overwrite="true" />
                                        <!-- Replace the readme.txt file by the one used for SSO-->
                                        <copy file="${project.basedir}/src/main/resources/readme.txt" tofile="${project.build.directory}/sso-bundle/readme.txt" overwrite="true" />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!--
 | Step 04: Package a new zip
-->
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>03-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>src/main/assembly/tomcat-sso-archive.xml</descriptor>
									</descriptors>
									<appendAssemblyId>false</appendAssemblyId>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
